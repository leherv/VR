// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(VRPersistenceDbContext))]
    [Migration("20210910074404_ChangedManyToManySubscription")]
    partial class ChangedPrimaryKeysToInt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Persistence.DbEntities.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("MediaName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaName")
                        .IsUnique();

                    b.ToTable("Media");
                });

            modelBuilder.Entity("Persistence.DbEntities.NotificationEndpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("NotificationEndpoints");
                });

            modelBuilder.Entity("Persistence.DbEntities.Release", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("MediaId")
                        .HasColumnType("integer");

                    b.Property<bool>("Notified")
                        .HasColumnType("boolean");

                    b.Property<int>("ReleaseNumber")
                        .HasColumnType("integer");

                    b.Property<int>("SubReleaseNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Releases");
                });

            modelBuilder.Entity("Persistence.DbEntities.Subscription", b =>
                {
                    b.Property<int>("MediaId")
                        .HasColumnType("integer");

                    b.Property<int>("NotificationEndpointId")
                        .HasColumnType("integer");

                    b.HasKey("MediaId", "NotificationEndpointId");

                    b.HasIndex("NotificationEndpointId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Persistence.DbEntities.Release", b =>
                {
                    b.HasOne("Persistence.DbEntities.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Persistence.DbEntities.Subscription", b =>
                {
                    b.HasOne("Persistence.DbEntities.Media", "Media")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Persistence.DbEntities.NotificationEndpoint", "NotificationEndpoint")
                        .WithMany("Subscriptions")
                        .HasForeignKey("NotificationEndpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("NotificationEndpoint");
                });

            modelBuilder.Entity("Persistence.DbEntities.Media", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Persistence.DbEntities.NotificationEndpoint", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
